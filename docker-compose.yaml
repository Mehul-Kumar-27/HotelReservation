version: "3"

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=reservation
    # volumes:
    #   - ./data:/data/db
    networks:
      - reservation-network

  mysql:
    image: mysql:latest
    container_name: mysql

    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=reservation
      - MYSQL_USER=mehul
      - MYSQL_PASSWORD=mehulpassword
    # volumes:
    #   - ./data:/var/lib/mysql
    networks:
      - reservation-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_PORT=3306
    networks:
      - reservation-network

  datagenerator:
    build:
      context: ./data_generator
      dockerfile: Dockerfile
    container_name: datagenerator
    depends_on:
      - mysql
    environment:
      - MYSQL_USER=mehul
      - MYSQL_PASSWORD=mehulpassword
      - MYSQL_HOST=mysql
      - MYSQL_DATABASE=reservation
    networks:
      - reservation-network


  zookeeper:
    image: "confluentinc/cp-zookeeper:6.1.0"
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

    networks:
      - reservation-network
  broker:
    image: "confluentinc/cp-enterprise-kafka:6.1.0"
    container_name: broker
    depends_on:
      - zookeeper
    ports:
    # Exposes 9092 for external connections to the broker
    # Use kafka:29092 for connections internal on the docker network
    # See https://rmoff.net/2018/08/02/kafka-listeners-explained/ for details
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      CONFLUENT_METRICS_ENABLE: 'false'
    networks:
      - reservation-network

  schema-registry:
    image: "confluentinc/cp-schema-registry:6.1.0"
    container_name: schema-registry
    ports:
      - 8084:8081  
    depends_on:
      - zookeeper
      - broker
    volumes:
      - ./scripts:/scripts    
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_LISTNERS: http://0.0.0.0:8081
    networks:
      - reservation-network     

  debezium:
    image: debezium/connect:1.9
    ports:
      - 8083:8083
    links:
      - broker
      - mysql
    environment:
     - BOOTSTRAP_SERVERS=broker:29092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - reservation-network

  kafdrop:
    container_name: kafdrop
    environment:
        KAFKA_BROKERCONNECT: broker:29092
    image: obsidiandynamics/kafdrop
    depends_on:
      - zookeeper
      - broker
    ports:
      - 9000:9000
    networks:
      - reservation-network
networks:
  reservation-network:
